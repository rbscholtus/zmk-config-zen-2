/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <500>;  // default: 300
    acceleration-exponent = <2>;
    delay-ms = <0>;
    trigger-period-ms = <16>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    behaviors {
        my_mt: my_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_MT";
            bindings = <&my_kp_macro>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            label = "Toggle Layer On";
            #binding-cells = <1>;
            toggle-mode = "on";
        };

        my_hold_sk: my_hold_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_HOLD_SK";
            bindings = <&kp>, <&my_quick_sk>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        my_quick_sk: my_quick_sk {
            compatible = "zmk,behavior-sticky-key";
            label = "MY_QUICK_SK";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };

        comma_lpar: comma_lpar {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_LPAR";
            bindings = <&my_mt LESS_THAN COMMA>, <&my_mt LESS_THAN LPAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_rpar: dot_rpar {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_RPAR";
            bindings = <&my_mt GREATER_THAN DOT>, <&my_mt GREATER_THAN RPAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        my_gresc: my_gresc {
            compatible = "zmk,behavior-mod-morph";
            label = "MY_GRESC";
            bindings = <&kp ESCAPE>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <24 25 26>;
        };

        reset_system {
            bindings = <&sys_reset>;
            key-positions = <25 26 27>;
        };

        spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <3 4>;
            layers = <3>;
        };

        win_start {
            bindings = <&kp LEFT_GUI>;
            key-positions = <3 4>;
            layers = <2>;
        };

        screenshot_mac {
            bindings = <&kp LS(LG(NUMBER_4))>;
            key-positions = <2 3>;
            layers = <3>;
        };

        screenshot_win {
            bindings = <&kp LS(LG(S))>;
            key-positions = <2 3>;
            layers = <2>;
        };

        play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <6 7>;
            layers = <2 3>;
        };

        mute {
            bindings = <&kp K_MUTE>;
            key-positions = <7 8>;
            layers = <2 3>;
        };

        volume_decrease {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <8 9>;
            layers = <2 3>;
        };

        volume_increase {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <9 10>;
            layers = <2 3>;
        };
    };

    macros {
        my_kp_macro: my_kp_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "MY_KP_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        win_focal_layer {
            bindings = <
&kp ESC                 &kp V           &kp L           &kp H               &kp G                    &kp K             &kp Q        &kp F               &kp O        &kp U      &kp J     &kp MINUS
&kp TAB                 &my_mt LC(A) S  &kp R           &kp N               &kp T                    &kp B             &kp Y        &kp C               &kp A        &kp E      &kp I     &kp SEMI
&mt LEFT_GUI BACKSLASH  &my_mt LC(Z) Z  &my_mt LC(X) X  &my_mt LC(C) M      &my_mt LC(V) D           &kp P             &bspc_del    &kp W               &comma_lpar  &dot_rpar  &kp FSLH  &kp EQUAL
                                                        &mt LEFT_ALT ENTER  &mt LEFT_CONTROL DELETE  &sk LEFT_SHIFT    &lt 2 SPACE  &lt 4 SINGLE_QUOTE  &lt 5 ENTER
            >;

            label = "W_FOCAL";
        };

        mac_focal_layer {
            bindings = <
&kp ESC              &kp V           &kp L           &kp H               &kp G                &kp K             &kp Q        &kp F               &kp O        &kp U      &kp J      &kp MINUS
&mt GLOBE TAB        &my_mt LG(A) S  &kp R           &kp N               &kp T                &kp B             &kp Y        &kp C               &kp A        &kp E      &kp I      &kp SEMI
&mt LCTRL BACKSLASH  &my_mt LG(Z) Z  &my_mt LG(X) X  &my_mt LG(C) M      &my_mt LG(V) D       &kp P             &bspc_del    &kp W               &comma_lpar  &dot_rpar  &kp SLASH  &kp EQUAL
                                                     &mt LEFT_ALT ENTER  &mt LEFT_GUI DELETE  &sk LEFT_SHIFT    &lt 3 SPACE  &lt 4 SINGLE_QUOTE  &lt 5 ENTER
            >;

            label = "FOCAL";
        };

        win_navigation_layer {
            bindings = <
&trans  &none  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &msc SCRL_DOWN    &kp PAGE_UP    &kp LC(LEFT)  &kp UP_ARROW  &kp LC(RIGHT)  &kp LC(HOME)  &none
&trans  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP      &kp PAGE_DOWN  &kp LEFT      &kp DOWN      &kp RIGHT      &kp LC(END)   &none
&trans  &none  &none           &none           &none            &none             &none          &kp HOME      &none         &kp END        &none         &none
                               &trans          &trans           &trans            &trans         &trans        &trans
            >;

            label = "W_NAV";
        };

        mac_navigation_layer {
            bindings = <
&trans  &none  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &msc SCRL_DOWN    &kp PAGE_UP    &kp LA(LEFT)  &kp UP_ARROW  &kp LA(RIGHT)  &kp LG(UP_ARROW)    &none
&trans  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP      &kp PAGE_DOWN  &kp LEFT      &kp DOWN      &kp RIGHT      &kp LG(DOWN_ARROW)  &none
&trans  &none  &none           &none           &none            &none             &bspc_del      &kp LG(LEFT)  &none         &kp LG(RIGHT)  &none               &none
                               &trans          &trans           &trans            &trans         &trans        &trans
            >;

            label = "NAV";
        };

        num_sym_layer {
            label = "NUM_SYM";
            bindings = <
&kp GRAVE    &kp DOLLAR  &kp HASH      &kp AT     &kp EXCLAMATION  &kp LEFT_BRACKET        &kp RIGHT_BRACKET  &kp N5  &kp N6        &kp N7     &kp N8        &kp MINUS
&kp PERCENT  &kp SLASH   &kp ASTERISK  &kp MINUS  &kp PLUS         &kp LEFT_BRACE          &kp RIGHT_BRACE    &kp N1  &kp N2        &kp N3     &kp NUMBER_4  &kp SEMICOLON
&trans       &kp TILDE   &kp CARET     &kp PIPE   &kp AMPERSAND    &none                   &bspc_del          &kp N9  &kp NUMBER_0  &kp COMMA  &kp DOT       &kp EQUAL
                                       &trans     &trans           &mt LEFT_SHIFT SPACE    &trans             &trans  &trans
            >;
        };

        fn_settings_layer {
            bindings = <
&to 0           &to 1         &none         &none         &none         &rgb_ug RGB_ON     &none   &kp F5  &kp F6   &kp F7   &kp F8   &none
&none           &out OUT_BLE  &out OUT_USB  &none         &none         &rgb_ug RGB_OFF    &none   &kp F1  &kp F2   &kp F3   &kp F4   &none
&bt BT_CLR_ALL  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0       &none   &kp F9  &kp F10  &kp F11  &kp F12  &none
                                            &trans        &trans        &trans             &trans  &trans  &trans
            >;

            label = "FN_SETT";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
