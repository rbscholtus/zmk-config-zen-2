/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        shift_tab: shift_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_TAB";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        // Behavior: Send ' without shift, _ with shift

        quote_uscore: quote_underscore {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <
                &kp QUOT  // Sends `'` when pressed
                &kp UNDERSCORE  // Sends `_` when Shift is held
            >;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Behavior: Send " without shift, - with shift

        dquote_dash: doublequote_dash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <
                &kp DQT   // Sends " without Shift
                &kp KP_MINUS // Sends - with Shift
            >;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Behavior: Send / without shift, < with shift

        fslash_less: forward_slash_less {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <
                &kp SLASH  // Sends / without Shift
                &kp LT     // Sends < with Shift
            >;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Behavior: Send , without shift, ? with shift

        comma_question: comma_question {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <
                &kp COMMA  // Sends , without Shift
                &kp QUESTION  // Sends ? with Shift
            >;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Behavior: Send ) without shift, = with shift

        rparen_equal: right_parenthesis_equal {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <
                &kp RIGHT_PARENTHESIS  // Sends ) without Shift
                &kp KP_EQUAL   // Sends = with Shift
            >;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        tildetab: tilde_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDETAB";
            bindings = <&kp TAB>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        my_hold_tap: my_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_HOLD_TAP";
            bindings = <&my_kp_macro>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_graphite {
            bindings = <&tog 2>;
            key-positions = <2 3 1>;
            layers = <2 0>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <25 26 27>;
            layers = <0>;
        };

        play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <6 7>;
            layers = <4 6>;
        };

        mute {
            bindings = <&kp K_MUTE>;
            key-positions = <7 8>;
            layers = <4 6>;
        };

        volume_decrease {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <8 9>;
            layers = <4 6>;
        };

        volume_increase {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <9 10>;
            layers = <4 6>;
        };

        power {
            bindings = <&kp C_POWER>;
            key-positions = <10 11>;
            layers = <4 6>;
        };

        spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <3 4>;
            layers = <4 6>;
        };

        toggle_mac_focal {
            bindings = <&tog 1>;
            key-positions = <2 1 0>;
            layers = <1 0>;
        };

        toggle_win_qwerty {
            bindings = <&tog 3>;
            key-positions = <3 4 5>;
            layers = <0 3>;
        };
    };

    macros {
        my_kp_macro: my_kp_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "MY_KP_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_qwerty_layer {
            display-name = "QWERTY";
            bindings = <
&gresc                      &kp Q  &kp W  &kp E               &kp R                &kp T                       &kp Y        &kp U        &kp I        &kp O    &kp P     &none
&tildetab                   &kp A  &kp S  &kp D               &kp F                &kp G                       &kp H        &kp J        &kp K        &kp L    &kp SEMI  &kp SQT
&mt LCTRL LEFT_PARENTHESIS  &kp Z  &kp X  &kp C               &kp V                &kp B                       &kp N        &kp M        &kp COMMA    &kp DOT  &kp FSLH  &kp RIGHT_PARENTHESIS
                                          &mt LEFT_ALT ENTER  &mt LEFT_GUI DELETE  &mt LEFT_SHIFT BACKSPACE    &lt 4 SPACE  &lt 5 MINUS  &lt 6 EQUAL
            >;

            label = "MAC_QWERTY";
        };

        mac_focal_layer {
            bindings = <
&trans  &kp V                 &kp L                 &kp H                 &kp G                 &kp K     &kp Q    &kp F   &kp O    &kp U     &kp J      &kp BSLH
&trans  &my_hold_tap LG(A) S  &kp R                 &kp N                 &kp T                 &kp B     &kp Y    &kp C   &kp A    &kp E     &kp I      &kp SLASH
&trans  &my_hold_tap LG(Z) Z  &my_hold_tap LG(X) X  &my_hold_tap LG(C) M  &my_hold_tap LG(V) D  &kp P     &kp SQT  &kp W   &kp DOT  &kp SEMI  &kp COMMA  &kp RIGHT_PARENTHESIS
                                                    &trans                &trans                &trans    &trans   &trans  &trans
            >;

            label = "MAC_FOCAL";
        };

        mac_graphite_layer {
            display-name = "GRAPHITE";
            bindings = <
&trans  &kp B        &kp L        &kp D        &kp W        &kp Z     &quote_uscore  &kp F   &kp O    &kp U         &kp J         &kp SEMI
&trans  &mt LG(A) N  &kp R        &kp T        &kp S        &kp G     &kp Y          &kp H   &kp A    &kp E         &kp I         &comma_question
&trans  &mt LG(Z) Z  &mt LG(X) X  &mt LG(C) M  &mt LG(V) C  &kp V     &kp K          &kp P   &kp DOT  &dquote_dash  &fslash_less  &rparen_equal
                                  &trans       &trans       &trans    &trans         &trans  &trans
            >;

            label = "MAC_GRAPHITE";
        };

        win_qwerty_layer {
            label = "WIN_QWERTY";
            display-name = "QWERTY";
            bindings = <
&gresc                         &kp Q  &kp W  &kp E               &kp R                    &kp T                       &kp Y        &kp U        &kp I        &kp O    &kp P     &kp MINUS
&tildetab                      &kp A  &kp S  &kp D               &kp F                    &kp G                       &kp H        &kp J        &kp K        &kp L    &kp SEMI  &kp SQT
&mt LEFT_WIN LEFT_PARENTHESIS  &kp Z  &kp X  &kp C               &kp V                    &kp B                       &kp N        &kp M        &kp COMMA    &kp DOT  &kp FSLH  &kp RIGHT_PARENTHESIS
                                             &mt LEFT_ALT ENTER  &mt LEFT_CONTROL DELETE  &mt LEFT_SHIFT BACKSPACE    &lt 4 SPACE  &lt 5 MINUS  &lt 6 EQUAL
            >;
        };

        navigation_layer {
            display-name = "NAV";
            bindings = <
&trans  &msc SCRL_UP    &mkp MB1        &mmv MOVE_UP    &mkp MB2         &mkp MB3        &none   &kp LA(LEFT)  &kp UP_ARROW  &kp LA(RIGHT)  &none  &none
&trans  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none           &none   &kp LEFT      &kp DOWN      &kp RIGHT      &none  &sys_reset
&trans  &none           &none           &none           &out OUT_USB     &out OUT_BLE    &none   &kp LG(LEFT)  &kp LA(DOWN)  &kp LG(RIGHT)  &none  &bootloader
                                        &trans          &trans           &trans          &trans  &trans        &trans
            >;

            label = "NAV";
        };

        num_sym_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp EXCL   &kp AT         &kp HASH       &kp DLLR          &kp PRCNT          &kp KP_DOT       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS   &kp KP_DIVIDE
&kp TILDE  &kp CARET  &kp AMPERSAND  &kp PIPE       &kp LEFT_BRACKET  &kp LEFT_BRACE     &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS  &kp KP_MULTIPLY
&trans     &none      &none          &kp BACKSLASH  &kp RBKT          &kp RIGHT_BRACE    &kp KP_EQUAL     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none         &kp RIGHT_PARENTHESIS
                                     &trans         &trans            &trans             &trans           &trans           &trans
            >;

            label = "NUM_SYM";
        };

        fn_settings_layer {
            display-name = "FN_SETT";
            bindings = <
&rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_ON     &none   &kp F1  &kp F2   &kp F3   &kp F4   &none
&rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_OFF    &none   &kp F5  &kp F6   &kp F7   &kp F8   &none
&trans           &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3       &none   &kp F9  &kp F10  &kp F11  &kp F12  &none
                                                   &trans           &trans           &trans             &trans  &trans  &trans
            >;

            label = "FN_SETT";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
